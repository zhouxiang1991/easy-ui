@charset "UTF-8";
@import "./common/variables.scss";
@import "./common/function.scss";
@import "./mixins/mixins.scss";
@import "./mixins/utils.scss";

@mixin button-size(
  $padding-vertical,
  $padding-horizontal,
  $font-size,
  $border-radius
) {
  padding: $padding-vertical $padding-horizontal;
  font-size: $font-size;
  border-radius: $border-radius;

  @include is(round) {
    @include border-radius-full;
  }
}

@mixin button-color($color, $bg-color, $border-color) {
  color: $color;
  background-color: $bg-color;
  border-color: $border-color;

  @include pseudo(hover focus) {
    color: $color;

    @include same(
      background-color
      border-color,
      light($bg-color, 30%)
    )
  }

  @include pseudo(active) {
    color: $color;

    @include same(
      background-color
      border-color,
      dark($bg-color, 30%)
    )
  }

  @include is(plain) {
    background-color: light($bg-color, 40%);

    @include pseudo(hover focus) {

      @include same(
        background-color
        border-color,
        $bg-color
      )
    }

    @include pseudo(active) {
      color: $color;

      @include same(
        background-color
        border-color,
        dark($bg-color, 30%)
      )
    }
  }

  @include is(disabled) {
    &, #{pseudo(hover focus active)} {
      color: $color;
      background-color: $bg-color;
      border-color: $border-color;
    }
  }
}

@include block(button) {
  display: inline-block;
  margin: 0;
  text-align: center;
  white-space: nowrap;
  cursor: pointer;
  box-sizing: border-box;
  transition: 0.1s;

  @include border-normal;
  @include color-normal;
  @include bg-color-normal;
  @include font-weight-normal;
  @include line-height-tight;

  @include same(
    outline
    -webkit-appearance
    user-select,
    none
  );

  @include next {
    margin-left: 10px;
  }

  @include pseudo-el(-moz-focus-inner) {
    border: 0;
  }

  @include button-size(
    12px,
    20px,
    get($color, "normal"),
    get($border, "radius.normal")
  );

  @include pseudo(hover focus) {
    color: color("primary");
    background-color: light(color("primary"), 60%);
    border-color: light(color("primary"), 30%);
  }

  @include pseudo(active) {
    background-color: light(color("primary"), 60%);

    @include same(
      color
      border-color,
      dark(color("primary"), 20%)
    );
  }

  @include is(plain) {
    background-color: color("white");

    @include pseudo(hover focus) {
      background-color: color("white");
      border-color: color("primary");
    }

    @include pseudo(active) {
      @include same(
        color
        border-color,
        dark(color("primary"), 20%)
      );
    }
  }

  @include is(disabled) {
    &, #{pseudo(hover focus)} {
      cursor: not-allowed;
      opacity: .5;

      @include same(
        color
        background-color
        border-color,
        get($color, "normal")
      );
    }
  }

  @include modifier(primary) {
    @include button-color(
      color("white"),
      color("primary"),
      color("primary"),
    );
  }

  @include modifier(warning) {
    @include button-color(
      color("white"),
      color("warning"),
      color("warning"),
    );
  }

  @include modifier(success) {
    @include button-color(
      color("white"),
      color("success"),
      color("success"),
    );
  }

  @include modifier(danger) {
    @include button-color(
      color("white"),
      color("danger"),
      color("danger"),
    );
  }

  @include modifier(medium) {
    @include button-size(
      10px,
      18px,
      get($font, "size.sm"),
      get($border, "radius.sm")
    );
  }

  @include modifier(small) {
    @include button-size(
      8px,
      16px,
      get($font, "size.xs"),
      get($border, "radius.xs")
    );
  }

  @include modifier(mini) {
    @include button-size(
      6px,
      14px,
      get($font, "size.sm"),
      get($border, "radius.sm")
    );
  }

  @include modifier(text) {
    color: color("primary");

    @include px(0);
    @include same(
      background-color
      border-color,
      transparent
    );

    @include pseudo(hover focus active) {
      @include same(
        background-color
        border-color,
        transparent
      );
    }

    @include pseudo(hover) {
      color: light(color("primary"), 30%)
    }

    @include pseudo(active) {
      color: dark(color("primary"), 30%)
    }

    @include is(disabled) {
      @include same(
        background-color
        border-color,
        transparent
      );

      @include pseudo(hover focus active) {
        @include same(
          background-color
          border-color,
          transparent
        );
      }
    }
  }
}
